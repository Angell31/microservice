name: Dockerfile & Image Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to get all folders containing Dockerfiles
  get-folders:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.set_output.outputs.folders }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Find Dockerfiles
        id: find_dockerfiles
        run: |
          # Find all directories containing Dockerfiles
          if [ -d "src" ]; then
            echo "Searching in src directory"
            DOCKER_DIRS=$(find src -type f -name "Dockerfile" -exec dirname {} \; | sort -u | tr '\n' ' ')
          else
            echo "Searching in entire repository"
            DOCKER_DIRS=$(find . -type f -name "Dockerfile" -not -path "*/\.*" -exec dirname {} \; | sort -u | tr '\n' ' ')
          fi
          
          echo "Found Dockerfiles in: $DOCKER_DIRS"
          echo "DOCKER_DIRS=$DOCKER_DIRS" >> $GITHUB_ENV

      - name: Set output properly
        id: set_output
        run: |
          # Read the directories found
          DIRS="${DOCKER_DIRS:-}"
          
          if [ -z "$DIRS" ]; then
            echo "No Dockerfiles found"
            echo "folders=[]" >> $GITHUB_OUTPUT
          else
            # Create a properly formatted JSON array
            DIRS_JSON=$(echo "$DIRS" | tr ' ' '\n' | grep -v '^$' | jq -R . | jq -s .)
            echo "Generated JSON: $DIRS_JSON"
            echo "folders=$DIRS_JSON" >> $GITHUB_OUTPUT
          fi

  # Process Dockerfiles step
  process-dockerfiles:
    runs-on: ubuntu-latest
    needs: get-folders
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.59.0/trivy_0.59.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.59.0_Linux-64bit.deb
        
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3.8.0
        
      - name: Process and scan Dockerfiles
        run: |
          # Get the folders output
          FOLDERS='${{ needs.get-folders.outputs.folders }}'
          echo "Folders to process: $FOLDERS"
          
          # Check if folders is empty or not a valid JSON array
          if [ "$FOLDERS" = "[]" ] || [ -z "$FOLDERS" ]; then
            echo "No Dockerfiles found to process"
            exit 0
          fi
          
          # Process each folder
          echo "$FOLDERS" | jq -r '.[]' | while read -r folder; do
            echo "====== Processing $folder ======"
            if [ ! -f "$folder/Dockerfile" ]; then
              echo "Warning: Dockerfile not found in $folder"
              continue
            fi
            
            # 1. Scan Dockerfile for misconfigurations
            echo "ðŸ‘‰ Scanning Dockerfile for misconfigurations"
            trivy config --severity HIGH,CRITICAL "$folder/Dockerfile" || true
            
            # 2. Build Docker image
            echo "ðŸ‘‰ Building Docker image"
            IMAGE_NAME="my-app-image-$(echo "$folder" | sed 's/[\/\.]/-/g')"
            docker build -t "$IMAGE_NAME" "$folder" || {
              echo "Error building Docker image for $folder"
              continue
            }
            
            # 3. Scan the built image
            echo "ðŸ‘‰ Scanning Docker image for vulnerabilities"
            trivy image --severity HIGH,CRITICAL "$IMAGE_NAME" || true
            
            echo "====== Completed processing $folder ======"
            echo ""
          done