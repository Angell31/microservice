name: Docker Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Enable manual trigger
  workflow_dispatch:

jobs:
  scan-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.37.3

      - name: Find all directories with Dockerfiles
        id: find-dockerfiles
        run: |
          echo "DOCKERFILE_DIRS=$(find . -name Dockerfile -exec dirname {} \; | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> $GITHUB_ENV

      - name: Display found Dockerfile directories
        run: |
          echo "Found Dockerfiles in the following directories:"
          echo $DOCKERFILE_DIRS | jq -r '.[]'

      - name: Scan Dockerfiles and build images
        run: |
          echo $DOCKERFILE_DIRS | jq -r '.[]' | while read -r dir; do
            echo "Processing directory: $dir"
            
            # Extract image name from directory path
            # Remove leading ./ and replace / with - for image naming
            IMAGE_NAME=$(echo "$dir" | sed 's/^\.\///' | sed 's/\//-/g')
            echo "Image name will be: $IMAGE_NAME"
            
            # Scan Dockerfile with Trivy
            echo "Scanning Dockerfile in $dir"
            trivy config --severity HIGH,CRITICAL "$dir/Dockerfile"
            
            # Build Docker image
            echo "Building Docker image from $dir/Dockerfile"
            docker build -t "$IMAGE_NAME:latest" "$dir"
            
            # Scan built Docker image with Trivy
            echo "Scanning Docker image $IMAGE_NAME:latest"
            trivy image --severity HIGH,CRITICAL "$IMAGE_NAME:latest"
            
            echo "Completed processing for $dir"
            echo "------------------------------------------------"
          done

      - name: Generate security report
        run: |
          echo "# Docker Security Scan Results" > security-report.md
          echo "## Scan completed at: $(date)" >> security-report.md
          echo "## Dockerfiles scanned:" >> security-report.md
          
          echo $DOCKERFILE_DIRS | jq -r '.[]' | while read -r dir; do
            echo "- $dir" >> security-report.md
            echo "  - Dockerfile vulnerabilities:" >> security-report.md
            trivy config --format json --severity HIGH,CRITICAL "$dir/Dockerfile" | \
              jq -r '.Results[] | .Vulnerabilities | length | "    - Found \(.) HIGH or CRITICAL vulnerabilities"' >> security-report.md || echo "    - Error scanning Dockerfile" >> security-report.md
            
            IMAGE_NAME=$(echo "$dir" | sed 's/^\.\///' | sed 's/\//-/g')
            echo "  - Image vulnerabilities for $IMAGE_NAME:" >> security-report.md
            trivy image --format json --severity HIGH,CRITICAL "$IMAGE_NAME:latest" | \
              jq -r '.Results[] | .Vulnerabilities | length | "    - Found \(.) HIGH or CRITICAL vulnerabilities"' >> security-report.md || echo "    - Error scanning image" >> security-report.md
          done

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md